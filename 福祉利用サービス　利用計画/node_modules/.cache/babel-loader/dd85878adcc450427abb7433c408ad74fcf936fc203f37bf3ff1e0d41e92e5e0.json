{"ast":null,"code":"/**\n * Web Vitalsの測定を行う関数\n * @param onPerfEntry - パフォーマンス測定時のコールバック\n */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\nexport default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"sources":["/Users/morinagaryoku/Downloads/excel問題サイト/福祉利用サービス　利用計画/福祉利用サービス　利用計画/src/reportWebVitals.ts"],"sourcesContent":["import { ReportHandler } from 'web-vitals';\n\n/**\n * Web Vitalsの測定を行う関数\n * @param onPerfEntry - パフォーマンス測定時のコールバック\n */\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals; "],"mappings":"AAEA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAIC,WAA2B,IAAW;EAC7D,IAAIA,WAAW,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;IACpD,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,KAAK;MACzEJ,MAAM,CAACF,WAAW,CAAC;MACnBG,MAAM,CAACH,WAAW,CAAC;MACnBI,MAAM,CAACJ,WAAW,CAAC;MACnBK,MAAM,CAACL,WAAW,CAAC;MACnBM,OAAO,CAACN,WAAW,CAAC;IACtB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}